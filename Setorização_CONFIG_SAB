  WITH RECURSIVE hours AS (
    SELECT 0 AS hh
    UNION ALL SELECT hh+1 FROM hours WHERE hh < 23
  ),
  bounds AS (
    SELECT hh, hh*3600 AS hs, (hh+1)*3600 AS he
    FROM hours
  ),
  base AS (
    SELECT
      sed.id,
      sed.escalas_diarias_criadas_id AS edc_id,
      edc.date                        AS edc_date,
      edc.sub_turno_escala_diaria_id  AS std_id,
      sed.setor_id,
      sed.horario_sub_turno_id        AS slot_id,
      sed.escalacao_id,
      esc.entrada_real,
      esc.saida_real
    FROM setorizacoes_escala_diarias sed
    JOIN escala_diaria_criadas edc
      ON edc.id = sed.escalas_diarias_criadas_id
    JOIN escalacoes_escala_diarias esc
      ON esc.id = sed.escalacao_id
    WHERE edc.date >= '2023-12-31' AND edc.date <= '2024-12-31'
      AND sed.ativado = 1
      AND sed.escalacao_id IS NOT NULL
      AND esc.setor_abriu = 1
      AND esc.folga = 0
  ),
  slot_times AS (
    SELECT
      b.*,
      JSON_UNQUOTE(JSON_EXTRACT(s.horarios, CONCAT('$[', b.slot_id - 1, '].horario_inicio'))) AS ini_str,
      JSON_UNQUOTE(JSON_EXTRACT(s.horarios, CONCAT('$[', b.slot_id - 1, '].horario_fim')))    AS fim_str
    FROM base b
    JOIN sub_turnos_escala_diarias s
      ON s.id = b.std_id
    WHERE JSON_LENGTH(s.horarios) >= b.slot_id
  ),
  slot_times_cast AS (
    SELECT
      st.*,
      CAST(COALESCE(st.entrada_real, st.ini_str) AS TIME) AS ini,
      CAST(COALESCE(st.saida_real,   st.fim_str) AS TIME) AS fim
    FROM slot_times st
  ),
  segments AS (
    SELECT edc_id, setor_id, edc_date AS eff_date, TIME_TO_SEC(ini) AS ini_sec, TIME_TO_SEC(fim) AS fim_sec
    FROM slot_times_cast
    WHERE fim > ini
    UNION ALL
    SELECT edc_id, setor_id, edc_date AS eff_date, TIME_TO_SEC(ini) AS ini_sec, 86400 AS fim_sec
    FROM slot_times_cast
    WHERE fim <= ini
    UNION ALL
    SELECT edc_id, setor_id, DATE_ADD(edc_date, INTERVAL 1 DAY) AS eff_date, 0 AS ini_sec, TIME_TO_SEC(fim) AS fim_sec
    FROM slot_times_cast
    WHERE fim <= ini
  ),
  segments_2024 AS (
    SELECT * FROM segments
    WHERE eff_date >= '2024-01-01' AND eff_date < '2025-01-01'
  ),
  hour_overlap AS (
    SELECT
      s.eff_date,
      WEEKDAY(s.eff_date) AS wk,
      b.hh AS hora,
      s.setor_id,
      LEAST(s.fim_sec, b.he) - GREATEST(s.ini_sec, b.hs) AS overlap_sec
    FROM segments_2024 s
    JOIN bounds b
      ON LEAST(s.fim_sec, b.he) - GREATEST(s.ini_sec, b.hs) >= 1800
  ),
  open_by_hour AS (
    SELECT eff_date, hora, setor_id
    FROM hour_overlap
    WHERE wk = 5
    GROUP BY eff_date, hora, setor_id
  ),
  flags AS (
    SELECT
      obh.eff_date, obh.hora,
      MAX(CASE WHEN s.nome='t1'  THEN 1 ELSE 0 END) AS t1,
      MAX(CASE WHEN s.nome='t2'  THEN 1 ELSE 0 END) AS t2,
      MAX(CASE WHEN s.nome='t3'  THEN 1 ELSE 0 END) AS t3,
      MAX(CASE WHEN s.nome='t4'  THEN 1 ELSE 0 END) AS t4,
      MAX(CASE WHEN s.nome='t5'  THEN 1 ELSE 0 END) AS t5,
      MAX(CASE WHEN s.nome='t6'  THEN 1 ELSE 0 END) AS t6,
      MAX(CASE WHEN s.nome='t7'  THEN 1 ELSE 0 END) AS t7,
      MAX(CASE WHEN s.nome='t8'  THEN 1 ELSE 0 END) AS t8,
      MAX(CASE WHEN s.nome='t9'  THEN 1 ELSE 0 END) AS t9,
      MAX(CASE WHEN s.nome='t10' THEN 1 ELSE 0 END) AS t10,
      MAX(CASE WHEN s.nome='t11' THEN 1 ELSE 0 END) AS t11,
      MAX(CASE WHEN s.nome='t12' THEN 1 ELSE 0 END) AS t12,
      MAX(CASE WHEN s.nome='t13' THEN 1 ELSE 0 END) AS t13,
      MAX(CASE WHEN s.nome='t14' THEN 1 ELSE 0 END) AS t14,
      MAX(CASE WHEN s.nome='a1'  THEN 1 ELSE 0 END) AS a1,
      MAX(CASE WHEN s.nome='a2'  THEN 1 ELSE 0 END) AS a2,
      MAX(CASE WHEN s.nome='a3'  THEN 1 ELSE 0 END) AS a3,
      MAX(CASE WHEN s.nome='a4'  THEN 1 ELSE 0 END) AS a4,
      MAX(CASE WHEN s.nome='a5'  THEN 1 ELSE 0 END) AS a5,
      MAX(CASE WHEN s.nome='a6'  THEN 1 ELSE 0 END) AS a6,
      MAX(CASE WHEN s.nome='a7'  THEN 1 ELSE 0 END) AS a7,
      MAX(CASE WHEN s.nome='a8'  THEN 1 ELSE 0 END) AS a8,
      0 AS a9, 0 AS a10, 0 AS a11,
      MAX(CASE WHEN s.nome='a12' THEN 1 ELSE 0 END) AS a12,
      MAX(CASE WHEN s.nome='a13' THEN 1 ELSE 0 END) AS a13,
      MAX(CASE WHEN s.nome='a14' THEN 1 ELSE 0 END) AS a14,
      MAX(CASE WHEN s.nome='cn'  THEN 1 ELSE 0 END) AS cn,
      MAX(CASE WHEN s.nome='cl'  THEN 1 ELSE 0 END) AS cl,
      MAX(CASE WHEN s.nome='cs'  THEN 1 ELSE 0 END) AS cs
    FROM open_by_hour obh
    JOIN setors s ON s.id = obh.setor_id
    GROUP BY obh.eff_date, obh.hora
  ),
  patterns AS (
    SELECT
      hora,
      t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13,t14,
      a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,
      cn,cl,cs,
      COUNT(*) AS freq,
      CONCAT(
        t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13,t14,
        a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,
        cn,cl,cs
      ) AS pat
    FROM flags
    GROUP BY
      hora,
      t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13,t14,
      a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,
      cn,cl,cs
  ),
  totals AS (
    SELECT hora, COUNT(*) AS total
    FROM flags
    GROUP BY hora
  ),
  ranked AS (
    SELECT
      p.hora,
      p.t1,p.t2,p.t3,p.t4,p.t5,p.t6,p.t7,p.t8,p.t9,p.t10,p.t11,p.t12,p.t13,p.t14,
      p.a1,p.a2,p.a3,p.a4,p.a5,p.a6,p.a7,p.a8,p.a9,p.a10,p.a11,p.a12,p.a13,p.a14,
      p.cn,p.cl,p.cs,
      p.freq, t.total,
      ROW_NUMBER() OVER (PARTITION BY p.hora ORDER BY p.freq DESC, p.pat) AS rn
    FROM patterns p
    JOIN totals t ON t.hora = p.hora
  )
  SELECT
    LPAD(hora,2,'0') AS `hora`,
    CASE WHEN t1  =1 THEN 'x' ELSE '' END AS `T1`,
    CASE WHEN t2  =1 THEN 'x' ELSE '' END AS `T2`,
    CASE WHEN t3  =1 THEN 'x' ELSE '' END AS `T3`,
    CASE WHEN t4  =1 THEN 'x' ELSE '' END AS `T4`,
    CASE WHEN t5  =1 THEN 'x' ELSE '' END AS `T5`,
    CASE WHEN t6  =1 THEN 'x' ELSE '' END AS `T6`,
    CASE WHEN t7  =1 THEN 'x' ELSE '' END AS `T7`,
    CASE WHEN t8  =1 THEN 'x' ELSE '' END AS `T8`,
    CASE WHEN t9  =1 THEN 'x' ELSE '' END AS `T9`,
    CASE WHEN t10 =1 THEN 'x' ELSE '' END AS `T10`,
    CASE WHEN t11 =1 THEN 'x' ELSE '' END AS `T11`,
    CASE WHEN t12 =1 THEN 'x' ELSE '' END AS `T12`,
    CASE WHEN t13 =1 THEN 'x' ELSE '' END AS `T13`,
    CASE WHEN t14 =1 THEN 'x' ELSE '' END AS `T14`,
    CASE WHEN a1  =1 THEN 'x' ELSE '' END AS `A1`,
    CASE WHEN a2  =1 THEN 'x' ELSE '' END AS `A2`,
    CASE WHEN a3  =1 THEN 'x' ELSE '' END AS `A3`,
    CASE WHEN a4  =1 THEN 'x' ELSE '' END AS `A4`,
    CASE WHEN a5  =1 THEN 'x' ELSE '' END AS `A5`,
    CASE WHEN a6  =1 THEN 'x' ELSE '' END AS `A6`,
    CASE WHEN a7  =1 THEN 'x' ELSE '' END AS `A7`,
    CASE WHEN a8  =1 THEN 'x' ELSE '' END AS `A8`,
    CASE WHEN a9  =1 THEN 'x' ELSE '' END AS `A9`,
    CASE WHEN a10 =1 THEN 'x' ELSE '' END AS `A10`,
    CASE WHEN a11 =1 THEN 'x' ELSE '' END AS `A11`,
    CASE WHEN a12 =1 THEN 'x' ELSE '' END AS `A12`,
    CASE WHEN a13 =1 THEN 'x' ELSE '' END AS `A13`,
    CASE WHEN a14 =1 THEN 'x' ELSE '' END AS `A14`,
    CASE WHEN cn  =1 THEN 'x' ELSE '' END AS `CN`,
    CASE WHEN cl  =1 THEN 'x' ELSE '' END AS `CL`,
    CASE WHEN cs  =1 THEN 'x' ELSE '' END AS `CS`,
    ROUND(100.0*freq/total,1) AS `pct_config`
  FROM ranked
  WHERE rn = 1
  ORDER BY hora;
